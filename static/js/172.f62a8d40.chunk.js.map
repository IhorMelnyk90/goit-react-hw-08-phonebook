{"version":3,"file":"static/js/172.f62a8d40.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/selectors.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormTitle = styled.h1`\n  display: block;\n  width: max-content;\n  color: blue;   \n  margin: 20px auto;  \n  `;\n\n\nexport const FormTextField = styled.div`\nposition: relative;\n  width: 50%;\n  line-height: 0.3;\n  padding: 2.2rem 0.8rem;\n  \n`;\n  \n\nexport const FormGroup = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 5px 10px 25px 10px;\n  border: 1px solid;\n  width: 50%;\n  margin: 20px auto; \n`;\n\nexport const NameGroup = styled.div`\n position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  padding: 1rem 0.75rem;\n  pointer-events: none;\n  border: 1px solid transparent;\n  transform-origin: 0 0;\n  transition: opacity 0.15s ease-in-out, transform 0.15s ease-in-out;\n`;\n\nexport const FormInput = styled.input`\n  display: block;  \n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: black;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n`;\n\nexport const FormBtn = styled.button`\n  display: inline-block;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #ffffff;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n  background-color: green;\n  border: 1px solid #4a1ded;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  border-radius: 0.25rem;\n  margin: 0 auto;\n  width: 30%;\n  transition: background-color 0.15s ease-in-out;\n\n  &:hover {\n    color: black;\n    background-color: orange;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport {\n  useAddContactsMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsOperation';\n\nimport {\n  FormTitle,\n  FormTextField,\n  FormGroup,\n  NameGroup,\n  FormInput,\n  FormBtn,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact] = useAddContactsMutation();\n  const { data } = useGetContactsQuery();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      data.find(\n        contact => contact.name.toLowerCase() === name.toLocaleLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contact`);\n    }\n    addContact({ name, number });\n    alert('Contact added!');\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <FormTitle>Phonebook</FormTitle>\n      <FormGroup action=\"submit\" onSubmit={handleSubmit}>\n        <FormTextField>\n          <FormInput\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleInputChange}\n            // placeholder=\"Your Name\"\n          />\n          <NameGroup htmlFor=\"name\">\n            Name\n          </NameGroup>\n        </FormTextField>\n        <FormTextField>\n          <FormInput\n            type=\"tel\"\n            id=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleInputChange}\n            // placeholder=\"+XX XXX XX XX\"\n          />\n          <NameGroup htmlFor=\"tel\">\n            Phone number\n          </NameGroup>\n        </FormTextField>\n        <FormBtn type=\"submit\">\n          Add contact\n        </FormBtn>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const ListLi = styled.li`\n  margin-bottom: 10px;\n  \n`;\n\nexport const ListBtnDelete = styled.button`\n  margin-left: 15px;\n`;","import { useDeleteContactsMutation } from 'redux/contacts/contactsOperation'; \nimport { ListLi, ListBtnDelete } from './ContactItem.styled';\n\nexport default function ContactItem({ contact }) {\n  const { id, name, phone } = contact;\n  const [deleteContact] = useDeleteContactsMutation();\n\n  return (\n    <ListLi key={id}>\n      {name} {phone}\n      <ListBtnDelete onClick={() => deleteContact(id)}>Delete</ListBtnDelete>\n    </ListLi>\n  );\n}\n","import { useGetContactsQuery } from 'redux/contacts/contactsOperation'; \nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors'; \nimport ContactItem from 'components/ContactItem';\n\nconst ContactList = () => {\n  const { data } = useGetContactsQuery();\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = () => {\n    return (\n      data &&\n      data.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  };\n\n  const contacts = filteredContacts();\n\n  return (\n    <>\n      {contacts && (\n        <ul>\n          {contacts.map(({ id, name, phone }) => (\n            <ContactItem key={id} contact={{ id, name, phone }} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterForm = styled.input`\n  display: block;\n  margin-top: 5px;\n  width: 50%;\n  height: calc(2.25rem + 2px);\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n\n`;\n\nexport const Title2 = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n  color: blue;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { FilterForm, Title2 } from './Filter.styled';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/slice'; \n\nconst Filter = () => {\n\n  const valueFiltered = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = (e) => {\n    dispatch(changeFilter(e.currentTarget.value))\n  };\n\n\n  return (\n    <div>\n      <Title2>Contacts</Title2>\n      <label>\n      <span>Find contact by name</span>\n        <FilterForm\n          type=\"text\"\n          name=\"filter\"\n          onChange={onChange}\n          value={valueFiltered}\n          placeholder=\"Enter name to search\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n\n\n\n\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nfunction ContactsPage() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["FormTitle","styled","FormTextField","FormGroup","NameGroup","FormInput","FormBtn","useState","name","setName","number","setNumber","useAddContactsMutation","addContact","data","useGetContactsQuery","handleInputChange","event","currentTarget","value","action","onSubmit","preventDefault","find","contact","toLowerCase","toLocaleLowerCase","alert","id","type","pattern","title","required","onChange","htmlFor","getFilter","state","filter","ListLi","ListBtnDelete","ContactItem","phone","useDeleteContactsMutation","deleteContact","onClick","useSelector","contacts","includes","map","FilterForm","Title2","valueFiltered","dispatch","useDispatch","e","changeFilter","placeholder"],"sourceRoot":""}